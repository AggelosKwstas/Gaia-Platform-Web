<?php

namespace app\models;

use Yii;
use yii\behaviors\TimestampBehavior;
use yii\db\ActiveRecord;


/**
 *
 * @property-read string $prettyName
 */
class Model extends ActiveRecord
{

    public $counter;
    public $average;
    public $total;


    public function beforeSave($insert)
    {


        if (!$this->isNewRecord && key_exists("date_updated", $this->getAttributes())) {
            $this->date_updated = (new \DateTime())->format('Y-m-d H:i:s');
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public static function getAllRestricted($user_id = null)
    {
        $user_id = $user_id ? $user_id : $user_id = Yii::$app->user->identity->id;

        return self::find()->all();

    }


    public static function getAllRestrictedCurrent()
    {

        return self::find()->all();
    }

    public function getPrettyName()
    {


        if ($this->name)
            return $this->name;
        return "";
    }


    public static function getBooleanArray()
    {
        return ["yes" => Yii::t("app", "Yes"),
            "no" => Yii::t("app", "No"),
        ];
    }

    public static function getBooleanArrayNA()
    {
        return [
            "n/a" => Yii::t("app", "n/a"),
            "yes" => Yii::t("app", "Yes"),
            "no" => Yii::t("app", "No"),

        ];
    }

    public static function findBoolean($name)
    {
        if ($name == "yes")
            return Yii::t("app", "Yes");
        else if ($name == "no") {
            return Yii::t("app", "No");
        }
        return Yii::t("app", $name);

    }

    public static function findBooleanNA($name)
    {
        if ($name == "yes")
            return Yii::t("app", "Yes");
        else if ($name == "no") {
            return Yii::t("app", "No");
        } else if ($name == "n/a")
            return Yii::t("app", "n/a");
        return Yii::t("app", $name);

    }

}
